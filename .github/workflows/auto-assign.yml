name: Auto Assign PR Reviewers
on:
  pull_request:
    types: [opened, ready_for_review, reopened, synchronize]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files_separator: ","

      - name: Get code owners
        id: codeowners
        uses: actions/github-script@v7
        with:
          script: |
            const { data: codeowners } = await github.rest.repos.getCodeowners({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            if (!codeowners.owners || codeowners.owners.length === 0) {
              core.setFailed('No CODEOWNERS file found or file is empty');
              return;
            }

            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(',');
            const matchingOwners = new Set();

            for (const file of changedFiles) {
              for (const owner of codeowners.owners) {
                if (owner.pattern && file.match(owner.pattern)) {
                  owner.usernames.forEach(username => matchingOwners.add(username));
                }
              }
            }

            const reviewers = Array.from(matchingOwners);
            if (reviewers.length > 0) {
              try {
                await github.rest.pulls.requestReviewers({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  reviewers: reviewers
                });
                console.log(`Successfully assigned reviewers: ${reviewers.join(', ')}`);
              } catch (error) {
                core.setFailed(`Failed to assign reviewers: ${error.message}`);
              }
            } else {
              console.log('No matching code owners found for the changed files');
            }