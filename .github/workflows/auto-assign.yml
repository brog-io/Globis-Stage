name: Dynamic Label Assignment from CODEOWNERS

on:
  pull_request:

jobs:
  label_pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Required to add labels to the PR
      contents: read        # Required to read the CODEOWNERS file

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get modified files in the PR
        id: modified_files
        run: |
          files=$(gh pr view ${{ github.event.pull_request.number }} --json files -q ".files[].path")
          echo "files=$files" >> $GITHUB_OUTPUT

      - name: Get code owners from CODEOWNERS file
        id: codeowners
        run: |
          if [[ -f CODEOWNERS ]]; then
            owners=$(grep -v '^#' CODEOWNERS | grep -v '^$')  # Ignore comments and empty lines
            echo "owners=$owners" >> $GITHUB_OUTPUT
          else
            echo "CODEOWNERS file not found. Skipping label assignment."
            exit 0
          fi

      - name: Assign dynamic labels based on CODEOWNERS
        run: |
          modified_files="${{ steps.modified_files.outputs.files }}"
          code_owners="${{ steps.codeowners.outputs.owners }}"

          # Convert outputs to arrays
          files_array=($modified_files)
          owners_array=($(echo "$code_owners" | tr '\n' ' '))

          # Create a set of labels to add
          declare -A labels_to_add

          for file in "${files_array[@]}"; do
            for line in "${owners_array[@]}"; do
              # Extract the path and owners from the CODEOWNERS line
              path=$(echo "$line" | awk '{print $1}')
              owners=$(echo "$line" | awk '{for (i=2; i<=NF; i++) print $i}')

              # Check if the file matches the CODEOWNERS path
              if [[ "$file" == $path* ]]; then
                for owner in $owners; do
                  labels_to_add["$owner"]=1
                done
              fi
            done
          done

          # Add labels to the PR
          for label in "${!labels_to_add[@]}"; do
            echo "Adding label: $label"
            gh pr edit ${{ github.event.pull_request.number }} --add-label "$label"
          done